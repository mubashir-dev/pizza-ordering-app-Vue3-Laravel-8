{"remainingRequest":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\GrowingNumber.vue?vue&type=template&id=354901d0","dependencies":[{"path":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\GrowingNumber.vue","mtime":1631199440260},{"path":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\node_modules\\vue-loader\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\node_modules\\vue-loader\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj57eyBwcmVmaXggfX17eyBuZXdWYWx1ZUZvcm1hdHRlZCB9fXt7IHN1ZmZpeCB9fTwvZGl2Pgo="},{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\GrowingNumber.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/dev/Desktop/vue-basic/pizza-ordering-app/src/components/GrowingNumber.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>{{ prefix }}{{ newValueFormatted }}{{ suffix }}</div>\n</template>\n\n<script>\nimport { computed, ref, watch, onMounted } from 'vue'\nimport numeral from 'numeral'\n\nexport default {\n  name: 'GrowingNumber',\n  props: {\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  setup (props) {\n    const newValue = ref(0)\n\n    const newValueFormatted = computed(\n      () => newValue.value < 1000 ? newValue.value : numeral(newValue.value).format('0,0')\n    )\n\n    const value = computed(() => props.value)\n\n    const grow = m => {\n      const v = Math.ceil(newValue.value + m)\n\n      if (v > value.value) {\n        newValue.value = value.value\n        return false\n      }\n\n      newValue.value = v\n\n      setTimeout(() => {\n        grow(m)\n      }, 25)\n    }\n\n    const growInit = () => {\n      grow(props.value / (props.duration / 25))\n    }\n\n    watch(value, () => {\n      growInit()\n    })\n\n    onMounted(() => {\n      growInit()\n    })\n\n    return {\n      newValueFormatted\n    }\n  }\n}\n</script>\n"]}]}