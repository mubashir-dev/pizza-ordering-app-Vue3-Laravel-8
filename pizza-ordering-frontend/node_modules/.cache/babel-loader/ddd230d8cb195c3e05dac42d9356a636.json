{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { mdiMenu } from '@mdi/js';\nimport AsideMenuList from '@/components/AsideMenuList';\nimport NavBarItem from '@/components/NavBarItem';\nimport Icon from '@/components/Icon';\nexport default {\n  name: 'AsideMenu',\n  components: {\n    AsideMenuList: AsideMenuList,\n    NavBarItem: NavBarItem,\n    Icon: Icon\n  },\n  props: {\n    menu: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup() {\n    var store = useStore();\n    var isFormScreen = computed(function () {\n      return store.state.isFormScreen;\n    });\n    var isAsideMobileExpanded = computed(function () {\n      return store.state.isAsideMobileExpanded;\n    });\n    var isAsideLgActive = computed(function () {\n      return store.state.isAsideLgActive;\n    });\n\n    var asideLgClose = function asideLgClose() {\n      store.dispatch('asideLgToggle', false);\n    };\n\n    var menuClick = function menuClick(event, item) {//\n    };\n\n    return {\n      isFormScreen: isFormScreen,\n      isAsideMobileExpanded: isAsideMobileExpanded,\n      isAsideLgActive: isAsideLgActive,\n      asideLgClose: asideLgClose,\n      menuClick: menuClick,\n      mdiMenu: mdiMenu\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\AsideMenu.vue"],"names":[],"mappings":"AAgCA,SAAS,QAAT,QAAyB,KAAzB;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,SAAS,OAAT,QAAwB,SAAxB;AACA,OAAO,aAAP,MAA0B,4BAA1B;AACA,OAAO,UAAP,MAAuB,yBAAvB;AACA,OAAO,IAAP,MAAiB,mBAAjB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,UAAU,EAAE;AAAE,IAAA,aAAa,EAAb,aAAF;AAAiB,IAAA,UAAU,EAAV,UAAjB;AAA6B,IAAA,IAAG,EAAH;AAA7B,GAFC;AAGb,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,KADF;AAEJ,MAAA,OAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFL;AADD,GAHM;AASb,EAAA,KATa,mBASJ;AACP,QAAM,KAAI,GAAI,QAAQ,EAAtB;AAEA,QAAM,YAAW,GAAI,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,YAAlB;AAAA,KAAD,CAA7B;AAEA,QAAM,qBAAoB,GAAI,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,qBAAlB;AAAA,KAAD,CAAtC;AAEA,QAAM,eAAc,GAAI,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAN,CAAY,eAAlB;AAAA,KAAD,CAAhC;;AAEA,QAAM,YAAW,GAAI,SAAf,YAAe,GAAM;AACzB,MAAA,KAAK,CAAC,QAAN,CAAe,eAAf,EAAgC,KAAhC;AACF,KAFA;;AAIA,QAAM,SAAQ,GAAI,SAAZ,SAAY,CAAC,KAAD,EAAQ,IAAR,EAAiB,CACjC;AACF,KAFA;;AAIA,WAAO;AACL,MAAA,YAAY,EAAZ,YADK;AAEL,MAAA,qBAAqB,EAArB,qBAFK;AAGL,MAAA,eAAe,EAAf,eAHK;AAIL,MAAA,YAAY,EAAZ,YAJK;AAKL,MAAA,SAAS,EAAT,SALK;AAML,MAAA,OAAM,EAAN;AANK,KAAP;AAQF;AAlCa,CAAf","sourcesContent":["<template>\n  <aside\n    v-show=\"!isFormScreen\"\n    class=\"w-60 fixed top-0 z-40 h-screen bg-gray-800 transition-position lg:left-0 overflow-y-scroll\n    scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-900 hover:scrollbar-thumb-gray-900\"\n    :class=\"[ isAsideMobileExpanded ? 'left-0' : '-left-60', isAsideLgActive ? 'block' : 'lg:hidden xl:block' ]\"\n  >\n    <div class=\"flex flex-row w-full bg-gray-900 text-white flex-1 h-14 items-center\">\n      <nav-bar-item type=\"hidden lg:flex xl:hidden\" color=\"\" @click=\"asideLgClose\">\n        <icon :path=\"mdiMenu\" class=\"cursor-pointer\" size=\"24\" />\n      </nav-bar-item>\n      <div class=\"flex-1 px-3\">\n        <span>Pizza Ordering App</span>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p v-if=\"typeof menuGroup === 'string'\" :key=\"`a-${index}`\" class=\"p-3 text-xs uppercase text-gray-400\">\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiMenu } from '@mdi/js'\nimport AsideMenuList from '@/components/AsideMenuList'\nimport NavBarItem from '@/components/NavBarItem'\nimport Icon from '@/components/Icon'\n\nexport default {\n  name: 'AsideMenu',\n  components: { AsideMenuList, NavBarItem, Icon },\n  props: {\n    menu: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup () {\n    const store = useStore()\n\n    const isFormScreen = computed(() => store.state.isFormScreen)\n\n    const isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded)\n\n    const isAsideLgActive = computed(() => store.state.isAsideLgActive)\n\n    const asideLgClose = () => {\n      store.dispatch('asideLgToggle', false)\n    }\n\n    const menuClick = (event, item) => {\n      //\n    }\n\n    return {\n      isFormScreen,\n      isAsideMobileExpanded,\n      isAsideLgActive,\n      asideLgClose,\n      menuClick,\n      mdiMenu\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}