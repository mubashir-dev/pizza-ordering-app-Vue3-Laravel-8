{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\n_pushScopeId(\"data-v-abc9f7ae\");\n\nvar _hoisted_1 = [\"width\", \"height\"];\nvar _hoisted_2 = [\"d\"];\n\n_popScopeId();\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass($setup.spanClass)\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    width: $props.size,\n    height: $props.size,\n    class: \"inline-block\"\n  }, [_createElementVNode(\"path\", {\n    d: $props.path\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2)], 8\n  /* PROPS */\n  , _hoisted_1))], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\Icon.vue"],"names":[],"mappings":";;;;;;;;;;uBACE,mBAAA,CAIO,MAJP,EAIO;AAJA,IAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,SAAF;AAIL,GAJP,E,gBACE,mBAAA,CAEM,KAFN,EAEM;AAFD,IAAA,OAAO,EAAC,WAEP;AAFoB,IAAA,KAAK,EAAE,MAAA,CAAA,IAE3B;AAFkC,IAAA,MAAM,EAAE,MAAA,CAAA,IAE1C;AAFgD,IAAA,KAAK,EAAC;AAEtD,GAFN,E,CACE,mBAAA,CAAkB,MAAlB,EAAkB;AAAX,IAAA,CAAC,EAAE,MAAA,CAAA;AAAQ,GAAlB,EAAc,IAAd,EAAc;AAAA;AAAd,IAAc,UAAd,C,CADF,E;;AAAA,I,UAAA,C,EADF,E;;AAAA,G","sourcesContent":["<template>\n  <span :class=\"spanClass\">\n    <svg viewBox=\"0 0 24 24\" :width=\"size\" :height=\"size\" class=\"inline-block\">\n      <path :d=\"path\" />\n    </svg>\n  </span>\n</template>\n\n<script>\nimport { computed } from 'vue'\n\nexport default {\n  name: 'Icon',\n  props: {\n    path: {\n      required: true\n    },\n    w: {\n      type: String,\n      default: 'w-6'\n    },\n    h: {\n      type: String,\n      default: 'h-6'\n    },\n    size: {\n      default: 16\n    }\n  },\n  setup (props) {\n    const spanClass = computed(() => {\n      return `inline-flex justify-center items-center ${props.w} ${props.h}`\n    })\n\n    return { spanClass }\n  }\n}\n</script>\n\n<style scoped>\n/*svg {*/\n/*  transform: rotate(var(--r, 0deg)) scale(var(--sx, 1), var(--sy, 1));*/\n/*}*/\npath {\n  fill: currentColor;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}