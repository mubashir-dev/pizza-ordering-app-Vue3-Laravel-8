{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_icon = _resolveComponent(\"icon\");\n\n  return _openBlock(), _createBlock(_resolveDynamicComponent($setup.is), {\n    class: _normalizeClass($setup.componentClass),\n    href: $props.href,\n    type: $setup.computedType,\n    to: $props.to,\n    target: $props.target\n  }, {\n    default: _withCtx(function () {\n      return [$props.icon ? (_openBlock(), _createBlock(_component_icon, {\n        key: 0,\n        path: $props.icon\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])) : _createCommentVNode(\"v-if\", true), $props.label ? (_openBlock(), _createElementBlock(\"span\", {\n        key: 1,\n        class: _normalizeClass($setup.labelClass)\n      }, _toDisplayString($props.label), 3\n      /* TEXT, CLASS */\n      )) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"class\", \"href\", \"type\", \"to\", \"target\"]);\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\JbButton.vue"],"names":[],"mappings":";;;;uBACE,YAAA,CAGY,wBAAA,CAHI,MAAA,CAAA,EAGJ,CAHZ,EAAkB;AAAG,IAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,cAAF,CAAR;AAA2B,IAAA,IAAI,EAAE,MAAA,CAAA,IAAjC;AAAwC,IAAA,IAAI,EAAE,MAAA,CAAA,YAA9C;AAA6D,IAAA,EAAE,EAAE,MAAA,CAAA,EAAjE;AAAsE,IAAA,MAAM,EAAE,MAAA,CAAA;AAA9E,GAAlB,E;sBACE;AAAA,aAAiC,CAArB,MAAA,CAAA,I,kBAAZ,YAAA,CAAiC,eAAjC,EAAiC;cAAA;AAAd,QAAA,IAAI,EAAE,MAAA,CAAA;AAAQ,OAAjC,E,IAAA,E;;AAAA,Q,QAAA,C,qCAAiC,EACrB,MAAA,CAAA,K,kBAAZ,mBAAA,CAAyD,MAAzD,EAAyD;cAAA;AAArC,QAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,UAAF;AAAgC,OAAzD,E,iBAA0C,MAAA,CAAA,K,CAA1C,EAA+C;AAAA;AAA/C,O,qCADiC,CAAjC;AAAA,K;;;;GADF,E;;AAAA,I,yCAAA,C","sourcesContent":["<template>\n  <component :is=\"is\" :class=\"componentClass\" :href=\"href\" :type=\"computedType\" :to=\"to\" :target=\"target\">\n    <icon v-if=\"icon\" :path=\"icon\" />\n    <span v-if=\"label\" :class=\"labelClass\">{{ label }}</span>\n  </component>\n</template>\n\n<script>\nimport { mdiMenuUp } from '@mdi/js'\nimport { computed } from 'vue'\nimport { colorsButtons, colorsButtonsOutline } from '@/colors.js'\nimport Icon from '@/components/Icon'\n\nexport default {\n  name: 'JbButton',\n  components: {\n    Icon\n  },\n  props: {\n    label: [String, Number],\n    icon: String,\n    href: String,\n    target: String,\n    to: [String, Object],\n    type: String,\n    color: {\n      type: String,\n      default: 'white'\n    },\n    small: Boolean,\n    outline: Boolean,\n    active: Boolean,\n    as: String\n  },\n  setup (props) {\n    const is = computed(() => {\n      if (props.as) {\n        return props.as\n      }\n\n      if (props.to) {\n        return 'router-link'\n      }\n\n      if (props.href) {\n        return 'a'\n      }\n\n      return 'button'\n    })\n\n    const computedType = computed(() => {\n      if (is.value === 'button') {\n        return props.type ?? 'button'\n      }\n\n      return null\n    })\n\n    const iconOnly = computed(() => props.icon && !props.label)\n\n    const labelClass = computed(() => props.small && props.icon ? 'px-1' : 'px-2')\n\n    const componentClass = computed(() => {\n      const base = [\n        'inline-flex',\n        'cursor-pointer',\n        'justify-center',\n        'items-center',\n        'whitespace-nowrap',\n        'ring-blue-700',\n        'focus:outline-none',\n        'transition-colors',\n        'duration-150',\n        'border',\n        'rounded',\n        props.small ? 'p-1' : 'p-2',\n        props.outline ? colorsButtonsOutline[props.color] : colorsButtons[props.color]\n      ]\n\n      if (props.active) {\n        base.push('ring')\n      }\n\n      return base\n    })\n\n    return {\n      is,\n      iconOnly,\n      labelClass,\n      computedType,\n      componentClass,\n      mdiMenuUp\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}