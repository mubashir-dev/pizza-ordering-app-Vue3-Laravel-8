{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  class: \"flex flex-row w-full bg-gray-900 text-white flex-1 h-14 items-center\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-1 px-3\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Pizza Ordering App\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_icon = _resolveComponent(\"icon\");\n\n  var _component_nav_bar_item = _resolveComponent(\"nav-bar-item\");\n\n  var _component_aside_menu_list = _resolveComponent(\"aside-menu-list\");\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass([\"w-60 fixed top-0 z-40 h-screen bg-gray-800 transition-position lg:left-0 overflow-y-scroll\\n    scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-900 hover:scrollbar-thumb-gray-900\", [$setup.isAsideMobileExpanded ? 'left-0' : '-left-60', $setup.isAsideLgActive ? 'block' : 'lg:hidden xl:block']])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_nav_bar_item, {\n    type: \"hidden lg:flex xl:hidden\",\n    color: \"\",\n    onClick: $setup.asideLgClose\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_icon, {\n        path: $setup.mdiMenu,\n        class: \"cursor-pointer\",\n        size: \"24\"\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _hoisted_2]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.menu, function (menuGroup, index) {\n    return _openBlock(), _createElementBlock(_Fragment, null, [typeof menuGroup === 'string' ? (_openBlock(), _createElementBlock(\"p\", {\n      key: \"a-\".concat(index),\n      class: \"p-3 text-xs uppercase text-gray-400\"\n    }, _toDisplayString(menuGroup), 1\n    /* TEXT */\n    )) : (_openBlock(), _createBlock(_component_aside_menu_list, {\n      key: \"b-\".concat(index),\n      menu: menuGroup,\n      onMenuClick: $setup.menuClick\n    }, null, 8\n    /* PROPS */\n    , [\"menu\", \"onMenuClick\"]))], 64\n    /* STABLE_FRAGMENT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])], 2\n  /* CLASS */\n  )), [[_vShow, !$setup.isFormScreen]]);\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\AsideMenu.vue"],"names":[],"mappings":";;AAOS,EAAA,KAAK,EAAC;;;8BAIT,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAwB,C,aACtB,mBAAA,CAA+B,MAA/B,EAA+B,IAA/B,EAAM,oBAAN,CADsB,CAAxB,E;;AAAA,C;;;;;;;;;wCAVJ,mBAAA,CA2BQ,OA3BR,EA2BQ;AAzBN,IAAA,KAAK,EAAA,eAAA,CAAA,CAAC,iMAAD,EAC2F,CACtF,MAAA,CAAA,qBAAA,GAAqB,QAArB,GAAqB,UADiE,EACvC,MAAA,CAAA,eAAA,GAAe,OAAf,GAAe,oBADwB,CAD3F,CAAA;AAyBC,GA3BR,E,CAME,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,YAAA,CAEe,uBAFf,EAEe;AAFD,IAAA,IAAI,EAAC,0BAEJ;AAF+B,IAAA,KAAK,EAAC,EAErC;AAFyC,IAAA,OAAK,EAAE,MAAA,CAAA;AAEhD,GAFf,E;sBACE;AAAA,aAAyD,CAAzD,YAAA,CAAyD,eAAzD,EAAyD;AAAlD,QAAA,IAAI,EAAE,MAAA,CAAA,OAA4C;AAAnC,QAAA,KAAK,EAAC,gBAA6B;AAAZ,QAAA,IAAI,EAAC;AAAO,OAAzD,E,IAAA,E;;AAAA,Q,QAAA,CAAyD,CAAzD;AAAA,K;;;;GADF,E;;AAAA,I,WAAA,CAMI,EAHJ,UAGI,CAPN,C,EAQA,mBAAA,CAYM,KAZN,EAYM,IAZN,EAYM,E,kBAXJ,mBAAA,CAUW,SAVX,EAUW,IAVX,EAUW,WAAA,CAV4B,MAAA,CAAA,IAU5B,EAVgC,UAAzB,SAAyB,EAAd,KAAc,EAAT;sEAChB,S,KAAS,Q,kBAAzB,mBAAA,CAEI,GAFJ,EAEI;AAFqC,MAAA,GAAG,cAAO,KAAP,CAExC;AAFwD,MAAA,KAAK,EAAC;AAE9D,KAFJ,E,iBACK,S,CADL,EACc;AAAA;AADd,K,mBAGA,YAAA,CAKE,0BALF,EAKE;AAHC,MAAA,GAAG,cAAO,KAAP,CAGJ;AAFC,MAAA,IAAI,EAAE,SAEP;AADC,MAAA,WAAU,EAAE,MAAA,CAAA;AACb,KALF,E,IAAA,E;;AAAA,M,uBAAA,C;;;GAMS,CAVX,E;;AAAA,GAWI,EAZN,C,CAdF,E;;AAAA,G,cACW,MAAA,CAAA,Y","sourcesContent":["<template>\n  <aside\n    v-show=\"!isFormScreen\"\n    class=\"w-60 fixed top-0 z-40 h-screen bg-gray-800 transition-position lg:left-0 overflow-y-scroll\n    scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-gray-900 hover:scrollbar-thumb-gray-900\"\n    :class=\"[ isAsideMobileExpanded ? 'left-0' : '-left-60', isAsideLgActive ? 'block' : 'lg:hidden xl:block' ]\"\n  >\n    <div class=\"flex flex-row w-full bg-gray-900 text-white flex-1 h-14 items-center\">\n      <nav-bar-item type=\"hidden lg:flex xl:hidden\" color=\"\" @click=\"asideLgClose\">\n        <icon :path=\"mdiMenu\" class=\"cursor-pointer\" size=\"24\" />\n      </nav-bar-item>\n      <div class=\"flex-1 px-3\">\n        <span>Pizza Ordering App</span>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p v-if=\"typeof menuGroup === 'string'\" :key=\"`a-${index}`\" class=\"p-3 text-xs uppercase text-gray-400\">\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiMenu } from '@mdi/js'\nimport AsideMenuList from '@/components/AsideMenuList'\nimport NavBarItem from '@/components/NavBarItem'\nimport Icon from '@/components/Icon'\n\nexport default {\n  name: 'AsideMenu',\n  components: { AsideMenuList, NavBarItem, Icon },\n  props: {\n    menu: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup () {\n    const store = useStore()\n\n    const isFormScreen = computed(() => store.state.isFormScreen)\n\n    const isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded)\n\n    const isAsideLgActive = computed(() => store.state.isAsideLgActive)\n\n    const asideLgClose = () => {\n      store.dispatch('asideLgToggle', false)\n    }\n\n    const menuClick = (event, item) => {\n      //\n    }\n\n    return {\n      isFormScreen,\n      isAsideMobileExpanded,\n      isAsideLgActive,\n      asideLgClose,\n      menuClick,\n      mdiMenu\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}