{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { computed, ref, watch, onMounted } from 'vue';\nimport numeral from 'numeral';\nexport default {\n  name: 'GrowingNumber',\n  props: {\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  setup: function setup(props) {\n    var newValue = ref(0);\n    var newValueFormatted = computed(function () {\n      return newValue.value < 1000 ? newValue.value : numeral(newValue.value).format('0,0');\n    });\n    var value = computed(function () {\n      return props.value;\n    });\n\n    var grow = function grow(m) {\n      var v = Math.ceil(newValue.value + m);\n\n      if (v > value.value) {\n        newValue.value = value.value;\n        return false;\n      }\n\n      newValue.value = v;\n      setTimeout(function () {\n        grow(m);\n      }, 25);\n    };\n\n    var growInit = function growInit() {\n      grow(props.value / (props.duration / 25));\n    };\n\n    watch(value, function () {\n      growInit();\n    });\n    onMounted(function () {\n      growInit();\n    });\n    return {\n      newValueFormatted: newValueFormatted\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\GrowingNumber.vue"],"names":[],"mappings":";AAKA,SAAS,QAAT,EAAmB,GAAnB,EAAwB,KAAxB,EAA+B,SAA/B,QAAgD,KAAhD;AACA,OAAO,OAAP,MAAoB,SAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,eADO;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,MADA;AAEN,MAAA,OAAO,EAAE;AAFH,KADH;AAKL,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,MADA;AAEN,MAAA,OAAO,EAAE;AAFH,KALH;AASL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,MADD;AAEL,MAAA,OAAO,EAAE;AAFJ,KATF;AAaL,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,MADE;AAER,MAAA,OAAO,EAAE;AAFD;AAbL,GAFM;AAoBb,EAAA,KApBa,iBAoBN,KApBM,EAoBC;AACZ,QAAM,QAAO,GAAI,GAAG,CAAC,CAAD,CAApB;AAEA,QAAM,iBAAgB,GAAI,QAAQ,CAChC;AAAA,aAAM,QAAQ,CAAC,KAAT,GAAiB,IAAjB,GAAwB,QAAQ,CAAC,KAAjC,GAAyC,OAAO,CAAC,QAAQ,CAAC,KAAV,CAAP,CAAwB,MAAxB,CAA+B,KAA/B,CAA/C;AAAA,KADgC,CAAlC;AAIA,QAAM,KAAI,GAAI,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,KAAZ;AAAA,KAAD,CAAtB;;AAEA,QAAM,IAAG,GAAI,SAAP,IAAO,CAAA,CAAA,EAAK;AAChB,UAAM,CAAA,GAAI,IAAI,CAAC,IAAL,CAAU,QAAQ,CAAC,KAAT,GAAiB,CAA3B,CAAV;;AAEA,UAAI,CAAA,GAAI,KAAK,CAAC,KAAd,EAAqB;AACnB,QAAA,QAAQ,CAAC,KAAT,GAAiB,KAAK,CAAC,KAAvB;AACA,eAAO,KAAP;AACF;;AAEA,MAAA,QAAQ,CAAC,KAAT,GAAiB,CAAjB;AAEA,MAAA,UAAU,CAAC,YAAM;AACf,QAAA,IAAI,CAAC,CAAD,CAAJ;AACD,OAFS,EAEP,EAFO,CAAV;AAGF,KAbA;;AAeA,QAAM,QAAO,GAAI,SAAX,QAAW,GAAM;AACrB,MAAA,IAAI,CAAC,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,QAAN,GAAiB,EAAhC,CAAD,CAAJ;AACF,KAFA;;AAIA,IAAA,KAAK,CAAC,KAAD,EAAQ,YAAM;AACjB,MAAA,QAAQ;AACT,KAFI,CAAL;AAIA,IAAA,SAAS,CAAC,YAAM;AACd,MAAA,QAAQ;AACT,KAFQ,CAAT;AAIA,WAAO;AACL,MAAA,iBAAgB,EAAhB;AADK,KAAP;AAGF;AA3Da,CAAf","sourcesContent":["<template>\n  <div>{{ prefix }}{{ newValueFormatted }}{{ suffix }}</div>\n</template>\n\n<script>\nimport { computed, ref, watch, onMounted } from 'vue'\nimport numeral from 'numeral'\n\nexport default {\n  name: 'GrowingNumber',\n  props: {\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  setup (props) {\n    const newValue = ref(0)\n\n    const newValueFormatted = computed(\n      () => newValue.value < 1000 ? newValue.value : numeral(newValue.value).format('0,0')\n    )\n\n    const value = computed(() => props.value)\n\n    const grow = m => {\n      const v = Math.ceil(newValue.value + m)\n\n      if (v > value.value) {\n        newValue.value = value.value\n        return false\n      }\n\n      newValue.value = v\n\n      setTimeout(() => {\n        grow(m)\n      }, 25)\n    }\n\n    const growInit = () => {\n      grow(props.value / (props.duration / 25))\n    }\n\n    watch(value, () => {\n      growInit()\n    })\n\n    onMounted(() => {\n      growInit()\n    })\n\n    return {\n      newValueFormatted\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}