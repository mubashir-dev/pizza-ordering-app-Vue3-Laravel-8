{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  ref: \"root\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\Charts\\LineChart.vue"],"names":[],"mappings":";;AACU,EAAA,GAAG,EAAC;;;uBAAZ,mBAAA,CAAqB,QAArB,EAAA,UAAA,EAAqB,IAArB,EAAqB;AAAA;AAArB,G","sourcesContent":["<template>\n  <canvas ref=\"root\" />\n</template>\n\n<script>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport {\n  Chart,\n  LineElement,\n  PointElement,\n  LineController,\n  LinearScale,\n  CategoryScale,\n  Tooltip\n} from 'chart.js'\n\nexport default {\n  name: 'LineChart',\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  setup (props) {\n    const root = ref(null)\n\n    let chart\n\n    Chart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip)\n\n    onMounted(() => {\n      chart = new Chart(root.value, {\n        type: 'line',\n        data: props.data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              display: false\n            },\n            x: {\n              display: true\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      })\n    })\n\n    const chartData = computed(() => props.data)\n\n    watch(chartData, data => {\n      if (chart) {\n        chart.data = data\n        chart.update()\n      }\n    })\n\n    return {\n      root\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}