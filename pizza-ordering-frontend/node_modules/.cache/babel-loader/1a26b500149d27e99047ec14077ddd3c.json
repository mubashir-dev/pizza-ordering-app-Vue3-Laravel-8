{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { mdiEye, mdiTrashCan } from '@mdi/js';\nimport ModalBox from '@/components/ModalBox';\nimport CheckboxCell from '@/components/CheckboxCell';\nimport Level from '@/components/Level';\nimport JbButtons from '@/components/JbButtons';\nimport JbButton from '@/components/JbButton';\nexport default {\n  name: 'ClientsTable',\n  components: {\n    ModalBox: ModalBox,\n    CheckboxCell: CheckboxCell,\n    Level: Level,\n    JbButtons: JbButtons,\n    JbButton: JbButton\n  },\n  props: {\n    checkable: Boolean\n  },\n  setup: function setup() {\n    var store = useStore();\n    var items = computed(function () {\n      return store.state.clients;\n    });\n    var isModalActive = ref(false);\n    var perPage = ref(10);\n    var currentPage = ref(0);\n    var checkedRows = ref([]);\n    var itemsPaginated = computed(function () {\n      return items.value.slice(perPage.value * currentPage.value, perPage.value * (currentPage.value + 1));\n    });\n    var numPages = computed(function () {\n      return Math.ceil(items.value.length / perPage.value);\n    });\n    var currentPageHuman = computed(function () {\n      return currentPage.value + 1;\n    });\n    var pagesList = computed(function () {\n      var pagesList = [];\n\n      for (var i = 0; i < numPages.value; i++) {\n        pagesList.push(i);\n      }\n\n      return pagesList;\n    });\n\n    var remove = function remove(arr, cb) {\n      var newArr = [];\n      arr.forEach(function (item) {\n        if (!cb(item)) {\n          newArr.push(item);\n        }\n      });\n      return newArr;\n    };\n\n    var checked = function checked(isChecked, client) {\n      if (isChecked) {\n        checkedRows.value.push(client);\n      } else {\n        checkedRows.value = remove(checkedRows.value, function (row) {\n          return row.id === client.id;\n        });\n      }\n    };\n\n    return {\n      isModalActive: isModalActive,\n      currentPage: currentPage,\n      currentPageHuman: currentPageHuman,\n      numPages: numPages,\n      checkedRows: checkedRows,\n      itemsPaginated: itemsPaginated,\n      pagesList: pagesList,\n      checked: checked,\n      mdiEye: mdiEye,\n      mdiTrashCan: mdiTrashCan\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\PizzasTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <modal-box v-model=\"isModalActive\" title=\"Please confirm action\" has-cancel>\r\n    <p>Lorem ipsum dolor sit amet <b>adipiscing elit</b></p>\r\n    <p>This is sample modal</p>\r\n  </modal-box>\r\n\r\n  <div v-if=\"checkedRows.length\" class=\"bg-gray-50 p-3\">\r\n    <span v-for=\"checkedRow in checkedRows\" :key=\"checkedRow.id\" class=\"inline-block bg-gray-100 px-2 py-1 rounded-sm mr-2 text-sm\">{{ checkedRow.name }}</span>\r\n  </div>\r\n\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th v-if=\"checkable\"></th>\r\n      <th></th>\r\n      <th>Name</th>\r\n      <th>Company</th>\r\n      <th>City</th>\r\n      <th>Progress</th>\r\n      <th>Created</th>\r\n      <th></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"client in itemsPaginated\" :key=\"client.id\">\r\n      <checkbox-cell v-if=\"checkable\" @checked=\"checked($event, client)\"/>\r\n      <td class=\"image-cell\">\r\n        <div class=\"image\">\r\n          <img :src=\"client.avatar\" class=\"rounded-full\">\r\n        </div>\r\n      </td>\r\n      <td data-label=\"Name\">{{ client.name }}</td>\r\n      <td data-label=\"Company\">{{ client.company }}</td>\r\n      <td data-label=\"City\">{{ client.city }}</td>\r\n      <td data-label=\"Progress\" class=\"progress-cell\">\r\n        <progress max=\"100\" :value=\"client.progress\">{{ client.progress }}</progress>\r\n      </td>\r\n      <td data-label=\"Created\">\r\n        <small class=\"text-gray-500\" :title=\"client.created\">{{ client.created }}</small>\r\n      </td>\r\n      <td class=\"actions-cell\">\r\n        <jb-buttons type=\"justify-start lg:justify-end\" no-wrap>\r\n          <jb-button class=\"mr-3\" color=\"success\" :icon=\"mdiEye\" small @click=\"isModalActive = true\" />\r\n          <jb-button color=\"danger\" :icon=\"mdiTrashCan\" small @click=\"isModalActive = true\" />\r\n        </jb-buttons>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div class=\"table-pagination\">\r\n    <level>\r\n      <jb-buttons>\r\n        <jb-button\r\n          v-for=\"page in pagesList\"\r\n          @click=\"currentPage = page\"\r\n          :active=\"page === currentPage\"\r\n          :label=\"page + 1\"\r\n          :key=\"page\"\r\n          small\r\n        />\r\n      </jb-buttons>\r\n      <small>Page {{ currentPageHuman }} of {{ numPages }}</small>\r\n    </level>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { mdiEye, mdiTrashCan } from '@mdi/js'\r\nimport ModalBox from '@/components/ModalBox'\r\nimport CheckboxCell from '@/components/CheckboxCell'\r\nimport Level from '@/components/Level'\r\nimport JbButtons from '@/components/JbButtons'\r\nimport JbButton from '@/components/JbButton'\r\n\r\nexport default {\r\n  name: 'ClientsTable',\r\n  components: {\r\n    ModalBox,\r\n    CheckboxCell,\r\n    Level,\r\n    JbButtons,\r\n    JbButton\r\n  },\r\n  props: {\r\n    checkable: Boolean\r\n  },\r\n  setup () {\r\n    const store = useStore()\r\n\r\n    const items = computed(() => store.state.clients)\r\n\r\n    const isModalActive = ref(false)\r\n\r\n    const perPage = ref(10)\r\n\r\n    const currentPage = ref(0)\r\n\r\n    const checkedRows = ref([])\r\n\r\n    const itemsPaginated = computed(\r\n      () => items.value.slice(perPage.value * currentPage.value, perPage.value * (currentPage.value + 1))\r\n    )\r\n\r\n    const numPages = computed(() => Math.ceil(items.value.length / perPage.value))\r\n\r\n    const currentPageHuman = computed(() => currentPage.value + 1)\r\n\r\n    const pagesList = computed(() => {\r\n      const pagesList = []\r\n\r\n      for (let i = 0; i < numPages.value; i++) {\r\n        pagesList.push(i)\r\n      }\r\n\r\n      return pagesList\r\n    })\r\n\r\n    const remove = (arr, cb) => {\r\n      const newArr = []\r\n\r\n      arr.forEach(item => {\r\n        if (!cb(item)) {\r\n          newArr.push(item)\r\n        }\r\n      })\r\n\r\n      return newArr\r\n    }\r\n\r\n    const checked = (isChecked, client) => {\r\n      if (isChecked) {\r\n        checkedRows.value.push(client)\r\n      } else {\r\n        checkedRows.value = remove(checkedRows.value, row => row.id === client.id)\r\n      }\r\n    }\r\n\r\n    return {\r\n      isModalActive,\r\n      currentPage,\r\n      currentPageHuman,\r\n      numPages,\r\n      checkedRows,\r\n      itemsPaginated,\r\n      pagesList,\r\n      checked,\r\n      mdiEye,\r\n      mdiTrashCan\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}