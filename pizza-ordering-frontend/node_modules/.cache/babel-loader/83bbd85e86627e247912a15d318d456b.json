{"ast":null,"code":"import { renderSlot as _renderSlot, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_resolveDynamicComponent($setup.is), {\n    class: _normalizeClass($setup.componentClass),\n    to: $props.to,\n    href: $props.href,\n    \"exact-active-class\": $setup.activeClass\n  }, {\n    default: _withCtx(function () {\n      return [_renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"class\", \"to\", \"href\", \"exact-active-class\"]);\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\NavBarItem.vue"],"names":[],"mappings":";;uBACE,YAAA,CAEY,wBAAA,CAFI,MAAA,CAAA,EAEJ,CAFZ,EAAkB;AAAG,IAAA,KAAK,EAAA,eAAA,CAAE,MAAA,CAAA,cAAF,CAAR;AAA2B,IAAA,EAAE,EAAE,MAAA,CAAA,EAA/B;AAAoC,IAAA,IAAI,EAAE,MAAA,CAAA,IAA1C;AAAiD,0BAAoB,MAAA,CAAA;AAArE,GAAlB,E;sBACE;AAAA,aAAQ,CAAR,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CAAQ,CAAR;AAAA,K;;;;GADF,E;;AAAA,I,6CAAA,C","sourcesContent":["<template>\n  <component :is=\"is\" :class=\"componentClass\" :to=\"to\" :href=\"href\" :exact-active-class=\"activeClass\">\n    <slot />\n  </component>\n</template>\n\n<script>\nimport { computed } from 'vue'\n\nexport default {\n  name: 'NavBarItem',\n  props: {\n    href: String,\n    to: String,\n    hasDivider: Boolean,\n    isDesktopIconOnly: Boolean,\n    dropdown: Boolean,\n    active: Boolean,\n    type: {\n      type: String,\n      default: 'flex'\n    },\n    pX: String,\n    color: {\n      type: String,\n      default: 'text-gray-900 hover:text-blue-500'\n    }\n  },\n  setup (props) {\n    const is = computed(() => {\n      if (props.href) {\n        return 'a'\n      }\n\n      if (props.to) {\n        return 'router-link'\n      }\n\n      return 'div'\n    })\n\n    const componentClass = computed(() => {\n      const base = [\n        props.type,\n        'items-center',\n        'flex-grow-0',\n        'flex-shrink-0',\n        'relative',\n        props.color,\n        'cursor-pointer',\n        'transition-colors',\n        'duration-150'\n      ]\n\n      if (props.type === 'block') {\n        base.push('lg:flex')\n      }\n\n      if (props.active) {\n        base.push('text-blue-600')\n      }\n\n      if (!props.dropdown) {\n        base.push('py-2', props.pX ?? 'px-3')\n      } else {\n        base.push('p-0', 'lg:py-2', props.pX ?? 'lg:px-3')\n      }\n\n      if (props.hasDivider) {\n        base.push('lg:border-r', 'lg:border-gray-100')\n      }\n\n      if (props.isDesktopIconOnly) {\n        base.push('lg:w-16', 'lg:justify-center')\n      }\n\n      return base.join(' ')\n    })\n\n    const activeClass = computed(() => {\n      return is.value === 'router-link' ? 'text-blue-500' : null\n    })\n\n    return { is, componentClass, activeClass }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}