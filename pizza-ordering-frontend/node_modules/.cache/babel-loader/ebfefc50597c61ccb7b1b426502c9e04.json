{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"flex flex-col md:flex-row items-center\"\n};\nvar _hoisted_2 = {\n  class: \"text-center md:text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_icon = _resolveComponent(\"icon\");\n\n  var _component_jb_button = _resolveComponent(\"jb-button\");\n\n  var _component_level = _resolveComponent(\"level\");\n\n  return !$setup.isDismissed ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([$setup.componentClass, \"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"])\n  }, [_createVNode(_component_level, null, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [$props.icon ? (_openBlock(), _createBlock(_component_icon, {\n        key: 0,\n        path: $props.icon,\n        w: \"w-10 md:w-5\",\n        h: \"h-10 md:h-5\",\n        size: \"24\",\n        class: \"md:mr-2\"\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\")])]), $setup.hasRightSlot ? _renderSlot(_ctx.$slots, \"right\", {\n        key: 0\n      }) : (_openBlock(), _createBlock(_component_jb_button, {\n        key: 1,\n        icon: $setup.mdiClose,\n        onClick: $setup.dismiss,\n        small: \"\"\n      }, null, 8\n      /* PROPS */\n      , [\"icon\", \"onClick\"]))];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  })], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"sources":["C:\\Users\\dev\\Desktop\\vue-basic\\pizza-ordering-app\\src\\components\\Notification.vue"],"names":[],"mappings":";;AAOW,EAAA,KAAK,EAAC;;;AAEH,EAAA,KAAK,EAAC;;;;;;;;;UAPT,MAAA,CAAA,W,kBADT,mBAAA,CAaM,KAbN,EAaM;UAAA;AAXH,IAAA,KAAK,EAAA,eAAA,CAAA,CAAE,MAAA,CAAA,cAAF,EACA,6FADA,CAAA;AAWF,GAbN,E,CAKE,YAAA,CAOQ,gBAPR,EAOQ,IAPR,EAOQ;sBANN;AAAA,aAGM,CAHN,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFQ,MAAA,CAAA,I,kBAAZ,YAAA,CAA2F,eAA3F,EAA2F;cAAA;AAAxE,QAAA,IAAI,EAAE,MAAA,CAAA,IAAkE;AAA5D,QAAA,CAAC,EAAC,aAA0D;AAA5C,QAAA,CAAC,EAAC,aAA0C;AAA5B,QAAA,IAAI,EAAC,IAAuB;AAAlB,QAAA,KAAK,EAAC;AAAY,OAA3F,E,IAAA,E;;AAAA,Q,QAAA,C,qCAEI,EADJ,mBAAA,CAAsD,MAAtD,EAAA,UAAA,EAAsD,CAAf,WAAA,CAAQ,IAAA,CAAA,MAAR,EAAQ,SAAR,CAAe,CAAtD,CACI,CAHN,CAGM,EACM,MAAA,CAAA,Y,GAAZ,WAAA,CAAyC,IAAA,CAAA,MAAzC,EAAyC,OAAzC,EAAyC;AAAA,QAAA,GAAA,EAAA;AAAA,OAAzC,C,kBACA,YAAA,CAA4D,oBAA5D,EAA4D;cAAA;AAAzC,QAAA,IAAI,EAAE,MAAA,CAAA,QAAmC;AAAxB,QAAA,OAAK,EAAE,MAAA,CAAA,OAAiB;AAAR,QAAA,KAAK,EAAL;AAAQ,OAA5D,E,IAAA,E;;AAAA,Q,mBAAA,C,CAFM,CAHN;AAAA,K,CAMM;;;;AAAA,GAPR,C,CALF,E;;AAAA,G","sourcesContent":["<template>\n  <div\n    v-if=\"!isDismissed\"\n    :class=\"componentClass\"\n    class=\"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"\n  >\n    <level>\n      <div class=\"flex flex-col md:flex-row items-center\">\n        <icon v-if=\"icon\" :path=\"icon\" w=\"w-10 md:w-5\" h=\"h-10 md:h-5\" size=\"24\" class=\"md:mr-2\" />\n        <span class=\"text-center md:text-left\"><slot /></span>\n      </div>\n      <slot v-if=\"hasRightSlot\" name=\"right\" />\n      <jb-button v-else :icon=\"mdiClose\" @click=\"dismiss\" small />\n    </level>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { mdiClose } from '@mdi/js'\nimport { colorsBg, colorsOutline } from '@/colors.js'\nimport Level from '@/components/Level'\nimport Icon from '@/components/Icon'\nimport JbButton from '@/components/JbButton'\n\nexport default {\n  name: 'Notification',\n  components: {\n    Icon,\n    Level,\n    JbButton\n  },\n  props: {\n    icon: String,\n    outline: Boolean,\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup (props, { slots }) {\n    const componentClass = computed(() => props.outline ? colorsOutline[props.color] : colorsBg[props.color])\n\n    const isDismissed = ref(false)\n\n    const dismiss = () => {\n      isDismissed.value = true\n    }\n\n    const hasRightSlot = computed(() => slots.right)\n\n    return {\n      componentClass,\n      isDismissed,\n      dismiss,\n      hasRightSlot,\n      mdiClose\n    }\n  }\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}